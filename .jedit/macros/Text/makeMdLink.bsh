//Actionbar tip: emd (extra md, not: electric motoric drive)
/**
 * Make a link destination and insert a link to it. Links can be inserted inline in
 * text. The format is, as title becomes: ´some text in title´
 *
 * 		[link text]:url some text in title
 * 
 * If caret is after 't' in text on following line
 *
 * 		before [link text]:url some text in title
 *
 * The markdown becomes
 * 
 *		before [link text][url] some text in title
 *
 * And the html becomes
 *
 * 		before <a href="´baseUrl´/´folder´/url.html" title="words in title">link text</a> after
 *
 * where baseurl is return value of mdbaseUrl() and folder is the folder where the
 * md file, in which link is inserted, is placed. 
 * 
 * file with name ´url´.md is created and opened as current buffer. For convenient 
 * pasting, the clipboard now contains line 0 of previous buffer content. The file can
 * be saved to another folder within mdBaseDir - any markdown (re)compilation is
 * done on a remade link reference definition list.
 * 
 * If the clipboard contained a unicode entity during making of a new link, it
 * affects the title, eg. &#x1F301; in clipboard would make a title="1F301;words in title"
 * It is perhaps easier to use a clipboard register - I use first character of the unicode
 * name for the unicode entity - eg. ´b´ for books
 * 
 * The md file must include, as line 0, "jquery.html+pictoLinks.css+pictoLinks.js" in the
 * querystring parameter ´head´ to make the unicoded pictographs links appear as intended.  
 *
 * The titles are save in file linksreferencesTitles.properties
 */
void makeMdLinkDest() {
	String[] args =toArray( backWordsOrSelected(view,true,".*\\[[^]]+\\]:\\w+.+"));
	if (args[1].length() >0) {
		while (textArea.getSelectedText() == null || !textArea.getSelectedText().startsWith(":"))
			textArea.goToPrevCharacter(true);
		textArea.backspace();
		//int caretPos=textArea.getCaretPosition();
		int cItem=1;
		int cIndex;
		String title="";
		while ((cIndex = args[cItem].indexOf(":")) == -1) 
			cItem++;
		String url=args[cItem].substring(cIndex+1);
		textArea.replaceSelection("["+args[cItem].substring(cIndex+1)+"]");
		//removeFromSelection(caretPos);
		if (cItem > 1) {
			String ucode=getClipboard().trim();
			title=ucode.matches("&#x[0-9A-Fa-f]{5};") ? ucode.substring(3,9) : "";
			while (--cItem > 0)
				title += args[cItem]+" ";
			title = title.trim();
			appendToFile(linksreferencesTitlesFileName(),asList(url+"="+title));
		}
		buffer.save(view,null);
		Registers.getRegister('$').setTransferable(new java.awt.datatransfer.StringSelection(textArea.getLineText(0)));
		view.getStatus().setMessage("top line in clipboard");
		jEdit.openFile(view,buffer.getPath().replaceAll("/[^/]+$","/")+url+".md");
		
	} else
		view.getStatus().setMessage("no '[link text]:url (title )*' pattern left to caret");
}
makeMdLinkDest();
