//Action bar tip: upm (up to markdown)
/**
 * Make a link to an existing file in mdBaseDir().
 *
 * An example
 * ==========
 *
 * If a file, froobonitz.md exists, a link to the comming or already existing froobonitz.html can made by writting:
 *
 *		[i am the link text][froobonitz]
 *
 * This macro shall be invoked after just have written eg.
 *
 *		[i am the link text][fro
 *
 *	or another eg.
 *
 *		[i am the link text][oni
 *
 * thus, some characters without closing square bracket. The result if:
 *		* no match: nothing happends in current buffer, but a message appears in status line
 *		* one match: the files barename is filled in
 *		* more than one match: a list for selection pops up prior filling in.
 */
void lookupMdLink() {
	String sPatt;

	command(String linkDest) {
		replaceWordBeforeCursor(sPatt.length(),linkDest+"]");
	}
	
	caretPos=textArea.getCaretPosition();
	linecaretPos = caretPos - textArea.getLineStartOffset(textArea.getCaretLine());
	beforeCaret = textArea.getLineText(textArea.getCaretLine()).substring(0,linecaretPos);
	bracketPos = beforeCaret.lastIndexOf('[');
	if (bracketPos != -1 && bracketPos < linecaretPos-1)  {
		sPatt = beforeCaret.substring(bracketPos+1).trim();
		if (sPatt.indexOf(']') != -1) {
			view.getStatus().setMessage("'] found ?");
			return;
		}
		List replacements = withinMdBaseDir(sPatt,"md");
		if (replacements.size() == 0) { 
			view.getStatus().setMessage(sPatt +" ?");
			return;
		}
		if (replacements.size() == 1)
			replaceWordBeforeCursor(sPatt.length(),replacements.get(0)+"]");
		else
			actionsDialog(this,NumSeq(replacements,sPatt),view);
	
	} else
		view.getStatus().setMessage("no '[' before word");
}

/**
 * looks up in mdBaseDir(), files with a given suffix and a word as part of the filename
 *
 * @param fileNPart the word that selects file that has the word inside their barename  
 * @param suffix of files selected
 * @return list of selected barenames of files
 */
List withinMdBaseDir(String fileNPart, String suffix) {
	fileVisitor() {
		boolean continueVisitFile(File f) {
			String fName = f.getName();
			if(fName.endsWith("."+suffix) ) {
				String bareFN = fName.replaceAll("\\."+suffix+"$","");
				if (bareFN.indexOf(fileNPart) != -1)
					retval.add(bareFN);
			}
			return true;
		}
		return this;
	}
	List retval=new ArrayList();
	walkFileTree(new File(mdBaseDir()),fileVisitor(),2);
	return retval;
}

void replaceWordBeforeCursor(int backsteps, String newWord) {
	while (backsteps-- > 0)
		textArea.goToPrevCharacter(true);
	textArea.setSelectedText(newWord);
}

lookupMdLink();