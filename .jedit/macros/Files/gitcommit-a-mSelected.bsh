/**
 removes selected from current buffer
 @return selected or null if noting selected
*/
String removedSelected() {
    Selection[] sa =textArea.getSelection();
    String retval;
    if (sa.length > 0) {
        retval=textArea.getSelectedText();
        buffer.remove(sa[0].getStart(),sa[0].getEnd()-sa[0].getStart());
    }
    return retval;
}

/**
 commit with from dir of current buffer
*/
void gitcommitCurBufDir(String message) { 
    File file = new File(buffer.getPath().replaceAll("/[^/]+$","/"));
    String[] cmds = {"git","commit","-a","-m",message};
    Process proc = Runtime.getRuntime().exec(cmds,null,file);
    BufferedReader br = new BufferedReader(new InputStreamReader(proc.getInputStream()));
    while ((line = br.readLine()) != null) {
        p(line);
    }
    br.close();
}

/**
 @return true if current or above dir af current buffer contains a folder named .git
*/
boolean isGitSynced() {
    String dir = buffer.getPath()+"/"; //.replaceAll("/[^/]+$","/")+"skip/";
    do {
        dir = dir.replaceAll("/[^/]+/$","/");
        File dotgit = new File(dir+".git");
        if (dotgit.exists() && dotgit.isDirectory()) {
            return true;
        }
    } while(dir.length() > 1);
    return false;
}

if ( isGitSynced()) {
	String message = removedSelected();
	buffer.save(view,null);
	if (message != null) {
		gitcommitCurBufDir(message);
		view.getStatus().setMessage("git commited");
	} else
		view.getStatus().setMessage("Mark a commit message!");
} else 
	buffer.save(view,null);
	



